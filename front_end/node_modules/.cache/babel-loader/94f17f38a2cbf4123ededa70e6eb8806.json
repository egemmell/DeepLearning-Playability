{"ast":null,"code":"var _jsxFileName = \"/home/emily/phd/web_app/front_end/src/Images.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Contact from \"./Contact\";\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Images() {\n  _s();\n\n  const host = window.REACT_APP_BACK_END_HOST;\n  const port = window.REACT_APP_BACK_END_PORT;\n  const [meta, setMeta] = useState({\n    meta: 'aaa'\n  });\n\n  const date = () => {\n    return String(Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(Date.now()));\n  };\n\n  const fetchImage = () => {\n    const requestOptions = {\n      method: 'GET',\n      header: {\n        'Content-Type': 'application/json'\n      } // {, 'Access-Control-Allow-Origin': '*', 'Accept': 'application/json', \"Access-Control-Allow-Methods\": \"GET\" },\n      // mode: 'cors'\n\n    };\n    fetch('http://' + host + ':' + port + '/image_preprocessing', requestOptions).then(response => response.json()).then(result => {\n      setMeta({\n        meta: result.map(item => ({\n          panoid: item[0],\n          month: item[1],\n          idx: item[2],\n          angle: item[3],\n          head: item[4],\n          cluster: item[5],\n          pp: item[6],\n          pp_float: item[8]\n        }))\n      });\n    });\n  };\n\n  const submit = (img_1, img_2, perception, choice, user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      header: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': 'http://' + host + ':5000/',\n        'Accept': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        \"img_1\": img_1,\n        \"img_2\": img_2,\n        \"perception\": perception,\n        \"choice\": choice,\n        \"user_id\": user_id,\n        \"time\": date()\n      })\n    };\n    fetch('http://' + host + ':5000/user_perceptions', requestOptions).then(response => response.json());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Images, \"AtvHCNTNOkyzFuMzxQx6zmx9isw=\");\n\n_c = Images;\nexport default Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/home/emily/phd/web_app/front_end/src/Images.js"],"names":["useState","Contact","Home","Images","host","window","REACT_APP_BACK_END_HOST","port","REACT_APP_BACK_END_PORT","meta","setMeta","date","String","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","now","fetchImage","requestOptions","method","header","fetch","then","response","json","result","map","item","panoid","idx","angle","head","cluster","pp","pp_float","submit","img_1","img_2","perception","choice","user_id","mode","body","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Contact from \"./Contact\"\nimport Home from \"./Home\"\n\nfunction Images() {\n  const host = window.REACT_APP_BACK_END_HOST;\n  const port = window.REACT_APP_BACK_END_PORT;\n  const [meta, setMeta] = useState({ meta: 'aaa' });\n\n  const date = () => {\n    return String(Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(Date.now()))\n  }\n\n  const fetchImage = () => {\n    const requestOptions = {\n      method: 'GET',\n      header: { 'Content-Type': 'application/json' }\n      // {, 'Access-Control-Allow-Origin': '*', 'Accept': 'application/json', \"Access-Control-Allow-Methods\": \"GET\" },\n      // mode: 'cors'\n    };\n    fetch('http://' + host + ':' + port + '/image_preprocessing', requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        setMeta({\n          meta: result.map(item => ({\n            panoid: item[0],\n            month: item[1],\n            idx: item[2],\n            angle: item[3],\n            head: item[4],\n            cluster: item[5],\n            pp: item[6],\n            pp_float: item[8]\n          }))\n        });\n      });\n  };\n\n  const submit = (img_1, img_2, perception, choice, user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      header: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': 'http://' + host + ':5000/', 'Accept': 'application/json' },\n      mode: 'cors',\n      body: JSON.stringify(\n        {\n          \"img_1\": img_1,\n          \"img_2\": img_2,\n          \"perception\": perception,\n          \"choice\": choice,\n          \"user_id\": user_id,\n          \"time\": date()\n        }\n      )\n    };\n    fetch('http://' + host + ':5000/user_perceptions', requestOptions)\n      .then(response => response.json())\n  };\n\n  return (\n    <div className=\"App\">\n      <p>Images</p>\n    </div>\n  );\n}\nexport default Images;\n"]},"metadata":{},"sourceType":"module"}