{"ast":null,"code":"var _jsxFileName = \"/home/emily/phd/web_app/front_end/src/Images.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Contact from \"./Contact\";\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Images() {\n  _s();\n\n  const host = window.REACT_APP_BACK_END_HOST;\n  const port = window.REACT_APP_BACK_END_PORT;\n  const [api, setApi] = useState(window.REACT_APP_API_KEY);\n  const [meta, setMeta] = useState({\n    meta: 'aaa'\n  });\n  const [cache, setCache] = useState(0);\n  const [userId, setUserId] = useState(uuidv4());\n\n  const date = () => {\n    return String(Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(Date.now()));\n  };\n\n  const fetchImage = () => {\n    const requestOptions = {\n      method: 'GET',\n      header: {\n        'Content-Type': 'application/json'\n      } // {, 'Access-Control-Allow-Origin': '*', 'Accept': 'application/json', \"Access-Control-Allow-Methods\": \"GET\" },\n      // mode: 'cors'\n\n    };\n    fetch('http://' + host + ':' + port + '/image_preprocessing', requestOptions).then(response => response.json()).then(result => {\n      setMeta({\n        meta: result.map(item => ({\n          panoid: item[0],\n          month: item[1],\n          idx: item[2],\n          angle: item[3],\n          head: item[4],\n          cluster: item[5],\n          pp: item[6],\n          pp_float: item[8]\n        }))\n      });\n    });\n  };\n\n  const submit = (img_1, img_2, perception, choice, user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      header: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': 'http://' + host + ':5000/',\n        'Accept': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        \"img_1\": img_1,\n        \"img_2\": img_2,\n        \"perception\": perception,\n        \"choice\": choice,\n        \"user_id\": user_id,\n        \"time\": date()\n      })\n    };\n    fetch('http://' + host + ':5000/user_perceptions', requestOptions).then(response => response.json());\n  }; // render image using API\n\n\n  const img_html = (panoid, head) => {\n    var heady = Math.round(head);\n    return `https://maps.googleapis.com/maps/api/streetview?size=640x640&pano=${panoid}&fov=120&heading=${heady}&pitch=0&key=${api}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-lg-4 offset-lg-1 col-md-4 offset-md-1 p-1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"images\",\n          onClick: () => {\n            submit(meta.meta[cache].idx, meta.meta[cache + 1].idx, value.id, meta.meta[cache].idx, userId);\n            updates();\n            game(0, meta.meta[cache].pp_float, meta.meta[cache + 1].pp_float);\n          },\n          src: img_html(meta.meta[cache].panoid, meta.meta[cache].head),\n          alt: \"image not loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-lg-2 offset-lg-0 col-md-2 offset-md-0\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          className: \"button\",\n          size: \"lg\",\n          block: true,\n          onClick: () => {\n            submit(meta.meta[cache][2], meta.meta[props.cache + 1][2], value.id, '1', userId);\n            updates();\n          },\n          children: \"\\u2248 Roughly Equal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          className: \"button\",\n          size: \"lg\",\n          block: true,\n          onClick: () => {\n            submit(meta.meta[cache][2], meta.meta[props.cache + 1][2], value.id, '0', userId);\n            updates();\n          },\n          children: \"x Not Comparable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          className: \"button\",\n          size: \"lg\",\n          block: true,\n          onClick: () => {\n            submit(meta.meta[cache][2], meta.meta[props.cache + 1][2], value.id, '2', userId);\n            updates();\n          },\n          children: \"Image not shown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-lg-4 offset-lg-0 col-md-4 p-1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"images\",\n          onClick: () => {\n            submit(meta.meta[cache].idx, meta.meta[cache + 1].idx, value.id, meta.meta[cache + 1].idx, props.userId);\n            updates();\n            game(1, meta.meta[cache].pp_float, meta.meta[cache + 1].pp_float);\n          },\n          src: img_html(meta.meta[cache + 1].panoid, meta.meta[cache + 1].head),\n          alt: \"image not loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Images, \"WoWF7c4Qg4UscJo9BM/pCw+vSUY=\");\n\n_c = Images;\nexport default Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/home/emily/phd/web_app/front_end/src/Images.js"],"names":["useState","v4","uuidv4","Contact","Home","Images","host","window","REACT_APP_BACK_END_HOST","port","REACT_APP_BACK_END_PORT","api","setApi","REACT_APP_API_KEY","meta","setMeta","cache","setCache","userId","setUserId","date","String","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","now","fetchImage","requestOptions","method","header","fetch","then","response","json","result","map","item","panoid","idx","angle","head","cluster","pp","pp_float","submit","img_1","img_2","perception","choice","user_id","mode","body","JSON","stringify","img_html","heady","Math","round","value","id","updates","game","props"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Contact from \"./Contact\"\nimport Home from \"./Home\"\n\nfunction Images() {\n  const host = window.REACT_APP_BACK_END_HOST;\n  const port = window.REACT_APP_BACK_END_PORT;\n  const [api, setApi] = useState(window.REACT_APP_API_KEY);\n\n  const [meta, setMeta] = useState({ meta: 'aaa' });\n  const [cache, setCache] = useState(0);\n  const [userId, setUserId] = useState(uuidv4());\n\n  const date = () => {\n    return String(Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(Date.now()))\n  }\n\n  const fetchImage = () => {\n    const requestOptions = {\n      method: 'GET',\n      header: { 'Content-Type': 'application/json' }\n      // {, 'Access-Control-Allow-Origin': '*', 'Accept': 'application/json', \"Access-Control-Allow-Methods\": \"GET\" },\n      // mode: 'cors'\n    };\n    fetch('http://' + host + ':' + port + '/image_preprocessing', requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        setMeta({\n          meta: result.map(item => ({\n            panoid: item[0],\n            month: item[1],\n            idx: item[2],\n            angle: item[3],\n            head: item[4],\n            cluster: item[5],\n            pp: item[6],\n            pp_float: item[8]\n          }))\n        });\n      });\n  };\n\n  const submit = (img_1, img_2, perception, choice, user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      header: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': 'http://' + host + ':5000/', 'Accept': 'application/json' },\n      mode: 'cors',\n      body: JSON.stringify(\n        {\n          \"img_1\": img_1,\n          \"img_2\": img_2,\n          \"perception\": perception,\n          \"choice\": choice,\n          \"user_id\": user_id,\n          \"time\": date()\n        }\n      )\n    };\n    fetch('http://' + host + ':5000/user_perceptions', requestOptions)\n      .then(response => response.json())\n  };\n\n  // render image using API\n  const img_html = (panoid, head) => {\n    var heady = Math.round(head);\n    return `https://maps.googleapis.com/maps/api/streetview?size=640x640&pano=${panoid}&fov=120&heading=${heady}&pitch=0&key=${api}`\n  };\n\n  return (\n    <div className=\"App\">\n      <p>Images</p>\n      <Row className='page'>\n                <div class=\"col-lg-4 offset-lg-1 col-md-4 offset-md-1 p-1\">\n                    <img className='images' onClick={() => { submit(meta.meta[cache].idx, meta.meta[cache + 1].idx, value.id, meta.meta[cache].idx, userId); updates(); game(0, meta.meta[cache].pp_float, meta.meta[cache + 1].pp_float) }} src={img_html(meta.meta[cache].panoid, meta.meta[cache].head)} alt='image not loaded' />\n                </div>\n                <div class=\"col-lg-2 offset-lg-0 col-md-2 offset-md-0\">\n                    <Button variant=\"outline-secondary\" className='button' size='lg' block onClick={() => { submit(meta.meta[cache][2], meta.meta[props.cache + 1][2], value.id, '1', userId); updates() }}>≈ Roughly Equal</Button>\n                    <Button variant=\"outline-secondary\" className='button' size='lg' block onClick={() => { submit(meta.meta[cache][2], meta.meta[props.cache + 1][2], value.id, '0', userId); updates() }}>x Not Comparable</Button>\n                    <Button variant=\"outline-secondary\" className='button' size='lg' block onClick={() => { submit(meta.meta[cache][2], meta.meta[props.cache + 1][2], value.id, '2', userId); updates() }}>Image not shown</Button>\n                </div>\n                \n                <div class=\"col-lg-4 offset-lg-0 col-md-4 p-1\">\n                    <img className='images' onClick={() => { submit(meta.meta[cache].idx, meta.meta[cache + 1].idx, value.id, meta.meta[cache + 1].idx, props.userId); updates(); game(1, meta.meta[cache].pp_float, meta.meta[cache + 1].pp_float) }} src={img_html(meta.meta[cache + 1].panoid, meta.meta[cache + 1].head)} alt='image not loaded' />\n                </div>\n            </Row>\n    </div>\n  );\n}\nexport default Images;\n"]},"metadata":{},"sourceType":"module"}