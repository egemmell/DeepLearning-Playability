{"ast":null,"code":"var _jsxFileName = \"/home/emily/phd/web_app/front_end/src/Images.js\";\nimport { useState } from \"react\";\nimport Contact from \"./Contact\";\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Images() {\n  const host = window.REACT_APP_BACK_END_HOST;\n  const port = window.REACT_APP_BACK_END_PORT;\n\n  const fetchImage = () => {\n    const requestOptions = {\n      method: 'GET',\n      header: {\n        'Content-Type': 'application/json'\n      } // {, 'Access-Control-Allow-Origin': '*', 'Accept': 'application/json', \"Access-Control-Allow-Methods\": \"GET\" },\n      // mode: 'cors'\n\n    };\n    fetch('http://' + host + ':' + port + '/image_preprocessing', requestOptions).then(response => response.json()).then(result => {\n      setMeta({\n        meta: result.map(item => ({\n          panoid: item[0],\n          month: item[1],\n          idx: item[2],\n          angle: item[3],\n          head: item[4],\n          cluster: item[5],\n          pp: item[6],\n          pp_float: item[8]\n        }))\n      });\n    });\n  };\n\n  const submit = (img_1, img_2, perception, choice, user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      header: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': 'http://' + host + ':5000/',\n        'Accept': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        \"img_1\": img_1,\n        \"img_2\": img_2,\n        \"perception\": perception,\n        \"choice\": choice,\n        \"user_id\": user_id,\n        \"time\": date()\n      })\n    };\n    fetch('http://' + host + ':5000/user_perceptions', requestOptions).then(response => response.json());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Images;\nexport default Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/home/emily/phd/web_app/front_end/src/Images.js"],"names":["useState","Contact","Home","Images","host","window","REACT_APP_BACK_END_HOST","port","REACT_APP_BACK_END_PORT","fetchImage","requestOptions","method","header","fetch","then","response","json","result","setMeta","meta","map","item","panoid","month","idx","angle","head","cluster","pp","pp_float","submit","img_1","img_2","perception","choice","user_id","mode","body","JSON","stringify","date"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,IAAI,GAAGC,MAAM,CAACC,uBAApB;AACA,QAAMC,IAAI,GAAGF,MAAM,CAACG,uBAApB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,MAAM,EAAE;AAAE,wBAAgB;AAAlB,OAFa,CAGrB;AACA;;AAJqB,KAAvB;AAMAC,IAAAA,KAAK,CAAC,YAAYT,IAAZ,GAAmB,GAAnB,GAAyBG,IAAzB,GAAgC,sBAAjC,EAAyDG,cAAzD,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdC,MAAAA,OAAO,CAAC;AACNC,QAAAA,IAAI,EAAEF,MAAM,CAACG,GAAP,CAAWC,IAAI,KAAK;AACxBC,UAAAA,MAAM,EAAED,IAAI,CAAC,CAAD,CADY;AAExBE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAD,CAFa;AAGxBG,UAAAA,GAAG,EAAEH,IAAI,CAAC,CAAD,CAHe;AAIxBI,UAAAA,KAAK,EAAEJ,IAAI,CAAC,CAAD,CAJa;AAKxBK,UAAAA,IAAI,EAAEL,IAAI,CAAC,CAAD,CALc;AAMxBM,UAAAA,OAAO,EAAEN,IAAI,CAAC,CAAD,CANW;AAOxBO,UAAAA,EAAE,EAAEP,IAAI,CAAC,CAAD,CAPgB;AAQxBQ,UAAAA,QAAQ,EAAER,IAAI,CAAC,CAAD;AARU,SAAL,CAAf;AADA,OAAD,CAAP;AAYD,KAfH;AAgBD,GAvBD;;AAyBA,QAAMS,MAAM,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,OAAnC,KAA+C;AAC5D,UAAMzB,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,MAAM,EAAE;AAAE,wBAAgB,kBAAlB;AAAsC,uCAA+B,YAAYR,IAAZ,GAAmB,QAAxF;AAAkG,kBAAU;AAA5G,OAFW;AAGnBgC,MAAAA,IAAI,EAAE,MAHa;AAInBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AACI,iBAASR,KADb;AAEI,iBAASC,KAFb;AAGI,sBAAcC,UAHlB;AAII,kBAAUC,MAJd;AAKI,mBAAWC,OALf;AAMI,gBAAQK,IAAI;AANhB,OADE;AAJa,KAAvB;AAeA3B,IAAAA,KAAK,CAAC,YAAYT,IAAZ,GAAmB,wBAApB,EAA8CM,cAA9C,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB;AAEH,GAlBC;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KArDQb,M;AAsDT,eAAeA,MAAf","sourcesContent":["import {useState} from \"react\";\nimport Contact from \"./Contact\"\nimport Home from \"./Home\"\n\nfunction Images() {\n  const host = window.REACT_APP_BACK_END_HOST;\n  const port = window.REACT_APP_BACK_END_PORT;\n  const fetchImage = () => {\n    const requestOptions = {\n      method: 'GET',\n      header: { 'Content-Type': 'application/json'}\n      // {, 'Access-Control-Allow-Origin': '*', 'Accept': 'application/json', \"Access-Control-Allow-Methods\": \"GET\" },\n      // mode: 'cors'\n    };\n    fetch('http://' + host + ':' + port + '/image_preprocessing', requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        setMeta({\n          meta: result.map(item => ({\n            panoid: item[0],\n            month: item[1],\n            idx: item[2],\n            angle: item[3],\n            head: item[4],\n            cluster: item[5],\n            pp: item[6],\n            pp_float: item[8]\n          }))\n        });\n      });\n  };\n\n  const submit = (img_1, img_2, perception, choice, user_id) => {\n    const requestOptions = {\n        method: 'POST',\n        header: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': 'http://' + host + ':5000/', 'Accept': 'application/json' },\n        mode: 'cors',\n        body: JSON.stringify(\n            {\n                \"img_1\": img_1,\n                \"img_2\": img_2,\n                \"perception\": perception,\n                \"choice\": choice,\n                \"user_id\": user_id,\n                \"time\": date()\n            }\n        )\n    };\n    fetch('http://' + host + ':5000/user_perceptions', requestOptions)\n        .then(response => response.json())\n};\n\n  return (\n    <div className=\"App\">\n      <p>Images</p>\n    </div>\n  );\n}\nexport default Images;\n"]},"metadata":{},"sourceType":"module"}