apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: front-end-ingress
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  rules:
    - host: www.pulsecanada.ca
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: back-end
                port:
                  number: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  annotations:
  # namespace: front-end
spec:
  replicas: 2
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
        - name: front-end
          image: egemmell/example-front-end #changed from egemmell/playability-front-end
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: REACT_APP_API_KEY
              value: "AIzaSyALVKYf0D3HQzTj0sEuBJzeoqbo5tXqgTE"
            - name: REACT_APP_BACK_END_HOST
              value: "157.230.71.145"
            - name: REACT_APP_BACK_END_PORT
              value: "5000"
---
apiVersion: v1
kind: Service
metadata:
  name: front-end-svc
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-certificate-id: "224dde90-1f27-4f0f-a63e-ecb0f224ce41"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "https"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 443
      targetPort: 80
      protocol: TCP
      name: https
  selector:
    app: front-end
